/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package MinecraftDSL

import org.bukkit.plugin.java.JavaPlugin
import java.io.File
import java.nio.file.Paths

class MinecraftDSLPlugin : JavaPlugin() {

    var joinMessage = ""
    var leaveMessage = ""

    var joinItems = ArrayList<String>()

    var isJoin = false

    companion object {
        var instance: MinecraftDSLPlugin? = null
            private set
    }

    override fun onEnable() {
        instance = this
        println("Initialising plugin...")
        getDSLFiles()
        server.pluginManager.registerEvents(DSLListener, this)
    }

    fun getDSLFiles() {
        File(Paths.get("").toAbsolutePath().toString()).walk().forEach {
            if(it.name.endsWith(".mc")) {
                var rootNode = Parser().parse(it.getAbsolutePath()) as DSLRoot

                for(node in rootNode.nodes) {
                    visit(node)
                }
            }
        }
    }

    fun visit(node: DSLNode) {
        when(node) {
            is JoinNode -> {
                isJoin = true
                for(n in node.nodes) {
                    visit(n)
                }
                isJoin = false
            }
            is GiveNode -> {
                node.items.forEach {
                    joinItems.add(it)
                }
            }
            is MessageNode -> {
                if(isJoin) {
                    joinMessage = node.message
                } else {
                    leaveMessage = node.message
                }
            }
        }
    }

}